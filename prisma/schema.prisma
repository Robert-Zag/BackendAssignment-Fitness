generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ExerciseDifficulty {
  EASY
  MEDIUM
  HARD
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  role     UserRole @default(USER)
  name     String?
  surname  String?
  nickName String?
  age      Int?

  completedExercises CompletedExercise[]
}

model Exercise {
  id         Int                 @id @default(autoincrement())
  difficulty ExerciseDifficulty?
  name       String?             @db.VarChar(200)
  createdAt  DateTime            @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime            @default(now()) @db.Timestamptz(6)
  deletedAt  DateTime?           @db.Timestamptz(6)

  programs           Program[]
  completedExercises CompletedExercise[]
}

model Program {
  id        Int       @id @default(autoincrement())
  name      String?   @db.VarChar(200)
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @db.Timestamptz(6)
  deletedAt DateTime? @db.Timestamptz(6)

  exercises Exercise[]
}

model CompletedExercise {
  id          Int      @id @default(autoincrement())
  completedAt DateTime @default(now()) @db.Timestamptz(6)
  duration    Int

  userId     Int
  exerciseId Int
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
}
